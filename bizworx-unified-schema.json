{
  "openapi": "3.1.0",
  "info": {
    "title": "BizWorx Complete Business Management API",
    "description": "Comprehensive API for managing all aspects of BizWorx business operations including clients, estimates, invoices, and job scheduling",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://new-remix-workspace-url.replit.app/api/gpt"
    }
  ],
  "security": [
    {
      "ApiKeyAuth": []
    }
  ],
  "paths": {
    "/clients": {
      "get": {
        "operationId": "getClients",
        "summary": "Get all clients",
        "description": "Retrieve all clients for the authenticated business",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createClient",
        "summary": "Create new client",
        "description": "Create a new client for the authenticated business",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "operationId": "getClient",
        "summary": "Get client by ID",
        "description": "Retrieve a specific client by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateClient",
        "summary": "Update client",
        "description": "Update an existing client",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateClientRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ClientResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteClient",
        "summary": "Delete client",
        "description": "Delete a client and all associated data",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Client not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/estimates": {
      "get": {
        "operationId": "getEstimates",
        "summary": "Get all estimates",
        "description": "Retrieve all estimates for the authenticated business",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimatesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createEstimate",
        "summary": "Create new estimate",
        "description": "Create a new estimate for the authenticated business",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateEstimateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/estimates/{id}": {
      "get": {
        "operationId": "getEstimate",
        "summary": "Get estimate by ID",
        "description": "Retrieve a specific estimate by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Estimate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateEstimate",
        "summary": "Update estimate",
        "description": "Update an existing estimate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateEstimateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EstimateResponse"
                }
              }
            }
          },
          "404": {
            "description": "Estimate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteEstimate",
        "summary": "Delete estimate",
        "description": "Delete an estimate",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Estimate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/estimates/{id}/convert-to-invoice": {
      "post": {
        "operationId": "convertEstimateToInvoice",
        "summary": "Convert estimate to invoice",
        "description": "Convert an existing estimate into an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Estimate not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/invoices": {
      "get": {
        "operationId": "getInvoices",
        "summary": "Get all invoices",
        "description": "Retrieve all invoices for the authenticated business",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoicesResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createInvoice",
        "summary": "Create new invoice",
        "description": "Create a new invoice for the authenticated business",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/{id}": {
      "get": {
        "operationId": "getInvoice",
        "summary": "Get invoice by ID",
        "description": "Retrieve a specific invoice by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateInvoice",
        "summary": "Update invoice",
        "description": "Update an existing invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvoiceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteInvoice",
        "summary": "Delete invoice",
        "description": "Delete an invoice",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Invoice not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/invoices/stats": {
      "get": {
        "operationId": "getInvoiceStats",
        "summary": "Get invoice statistics",
        "description": "Retrieve invoice statistics and analytics for the authenticated business",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceStatsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/jobs": {
      "get": {
        "operationId": "getJobs",
        "summary": "Get all jobs",
        "description": "Retrieve all jobs for the authenticated business",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobsResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "createJob",
        "summary": "Create new job",
        "description": "Create a new job for the authenticated business",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/{id}": {
      "get": {
        "operationId": "getJob",
        "summary": "Get job by ID",
        "description": "Retrieve a specific job by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "operationId": "updateJob",
        "summary": "Update job",
        "description": "Update an existing job",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteJob",
        "summary": "Delete job",
        "description": "Delete a job",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Job not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/jobs/natural-language": {
      "post": {
        "operationId": "scheduleJobNaturalLanguage",
        "summary": "Schedule job using natural language",
        "description": "Create and schedule a job using natural language description",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/NaturalLanguageJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/JobResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "X-API-Key"
      }
    },
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "businessId": {"type": "integer"},
          "name": {"type": "string"},
          "email": {"type": "string"},
          "phone": {"type": "string"},
          "address": {"type": "string"},
          "notes": {"type": "string"},
          "createdAt": {"type": "string", "format": "date-time"}
        }
      },
      "CreateClientRequest": {
        "type": "object",
        "required": ["name", "email"],
        "properties": {
          "name": {"type": "string"},
          "email": {"type": "string"},
          "phone": {"type": "string"},
          "address": {"type": "string"},
          "notes": {"type": "string"}
        }
      },
      "UpdateClientRequest": {
        "type": "object",
        "properties": {
          "name": {"type": "string"},
          "email": {"type": "string"},
          "phone": {"type": "string"},
          "address": {"type": "string"},
          "notes": {"type": "string"}
        }
      },
      "Estimate": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "businessId": {"type": "integer"},
          "clientId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {"type": "string"},
                "description": {"type": "string"},
                "quantity": {"type": "number"},
                "rate": {"type": "number"},
                "amount": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "string"},
          "tax": {"type": "string"},
          "total": {"type": "string"},
          "status": {"type": "string", "enum": ["draft", "sent", "approved", "rejected", "expired"]},
          "validUntil": {"type": "string", "format": "date"},
          "shareToken": {"type": "string"},
          "createdAt": {"type": "string", "format": "date-time"}
        }
      },
      "CreateEstimateRequest": {
        "type": "object",
        "required": ["clientId", "title", "items", "total"],
        "properties": {
          "clientId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {"type": "string"},
                "quantity": {"type": "number"},
                "rate": {"type": "number"},
                "amount": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "string"},
          "tax": {"type": "string"},
          "total": {"type": "string"},
          "status": {"type": "string"},
          "validUntil": {"type": "string", "format": "date"},
          "notes": {"type": "string"}
        }
      },
      "UpdateEstimateRequest": {
        "type": "object",
        "properties": {
          "clientId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {"type": "string"},
                "quantity": {"type": "number"},
                "rate": {"type": "number"},
                "amount": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "string"},
          "tax": {"type": "string"},
          "total": {"type": "string"},
          "status": {"type": "string"},
          "validUntil": {"type": "string", "format": "date"},
          "notes": {"type": "string"}
        }
      },
      "Invoice": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "businessId": {"type": "integer"},
          "clientId": {"type": "integer"},
          "clientName": {"type": "string"},
          "invoiceNumber": {"type": "string"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {"type": "string"},
                "description": {"type": "string"},
                "quantity": {"type": "number"},
                "rate": {"type": "number"},
                "amount": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "string"},
          "tax": {"type": "string"},
          "total": {"type": "string"},
          "status": {"type": "string", "enum": ["draft", "sent", "paid", "overdue", "cancelled"]},
          "dueDate": {"type": "string", "format": "date"},
          "shareToken": {"type": "string"},
          "createdAt": {"type": "string", "format": "date-time"}
        }
      },
      "CreateInvoiceRequest": {
        "type": "object",
        "required": ["clientId", "title", "items", "total"],
        "properties": {
          "clientId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {"type": "string"},
                "quantity": {"type": "number"},
                "rate": {"type": "number"},
                "amount": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "string"},
          "tax": {"type": "string"},
          "total": {"type": "string"},
          "status": {"type": "string"},
          "dueDate": {"type": "string", "format": "date"},
          "notes": {"type": "string"}
        }
      },
      "UpdateInvoiceRequest": {
        "type": "object",
        "properties": {
          "clientId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "items": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "description": {"type": "string"},
                "quantity": {"type": "number"},
                "rate": {"type": "number"},
                "amount": {"type": "number"}
              }
            }
          },
          "subtotal": {"type": "string"},
          "tax": {"type": "string"},
          "total": {"type": "string"},
          "status": {"type": "string"},
          "dueDate": {"type": "string", "format": "date"},
          "notes": {"type": "string"}
        }
      },
      "Job": {
        "type": "object",
        "properties": {
          "id": {"type": "integer"},
          "businessId": {"type": "integer"},
          "clientId": {"type": "integer"},
          "clientName": {"type": "string"},
          "assignedUserId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "address": {"type": "string"},
          "scheduledStart": {"type": "string", "format": "date-time"},
          "scheduledEnd": {"type": "string", "format": "date-time"},
          "status": {"type": "string", "enum": ["scheduled", "in_progress", "completed", "cancelled", "on_hold"]},
          "priority": {"type": "string", "enum": ["low", "medium", "high", "urgent"]},
          "jobType": {"type": "string"},
          "estimatedAmount": {"type": "string"},
          "notes": {"type": "string"},
          "isRecurring": {"type": "boolean"},
          "recurringFrequency": {"type": "string"},
          "recurringEndDate": {"type": "string", "format": "date"},
          "createdAt": {"type": "string", "format": "date-time"}
        }
      },
      "CreateJobRequest": {
        "type": "object",
        "required": ["clientId", "title"],
        "properties": {
          "clientId": {"type": "integer"},
          "assignedUserId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "address": {"type": "string"},
          "scheduledStart": {"type": "string", "format": "date-time"},
          "scheduledEnd": {"type": "string", "format": "date-time"},
          "status": {"type": "string"},
          "priority": {"type": "string"},
          "jobType": {"type": "string"},
          "estimatedAmount": {"type": "number"},
          "notes": {"type": "string"},
          "isRecurring": {"type": "boolean"},
          "recurringFrequency": {"type": "string"},
          "recurringEndDate": {"type": "string", "format": "date"}
        }
      },
      "UpdateJobRequest": {
        "type": "object",
        "properties": {
          "clientId": {"type": "integer"},
          "assignedUserId": {"type": "integer"},
          "title": {"type": "string"},
          "description": {"type": "string"},
          "address": {"type": "string"},
          "scheduledStart": {"type": "string", "format": "date-time"},
          "scheduledEnd": {"type": "string", "format": "date-time"},
          "status": {"type": "string"},
          "priority": {"type": "string"},
          "jobType": {"type": "string"},
          "estimatedAmount": {"type": "number"},
          "notes": {"type": "string"},
          "isRecurring": {"type": "boolean"},
          "recurringFrequency": {"type": "string"},
          "recurringEndDate": {"type": "string", "format": "date"}
        }
      },
      "NaturalLanguageJobRequest": {
        "type": "object",
        "required": ["description"],
        "properties": {
          "description": {"type": "string", "description": "Natural language description of the job to be scheduled"},
          "clientName": {"type": "string", "description": "Name of the client (optional, can be inferred)"}
        }
      },
      "InvoiceStats": {
        "type": "object",
        "properties": {
          "totalInvoices": {"type": "integer"},
          "totalRevenue": {"type": "string"},
          "paidInvoices": {"type": "integer"},
          "unpaidInvoices": {"type": "integer"},
          "overdueInvoices": {"type": "integer"},
          "averageInvoiceValue": {"type": "string"},
          "monthlyRevenue": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "month": {"type": "string"},
                "revenue": {"type": "string"}
              }
            }
          }
        }
      },
      "ClientsResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Client"}
          },
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "ClientResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {"$ref": "#/components/schemas/Client"},
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "EstimatesResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Estimate"}
          },
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "EstimateResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {"$ref": "#/components/schemas/Estimate"},
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "InvoicesResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Invoice"}
          },
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "InvoiceResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {"$ref": "#/components/schemas/Invoice"},
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "InvoiceStatsResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {"$ref": "#/components/schemas/InvoiceStats"},
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "JobsResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {
            "type": "array",
            "items": {"$ref": "#/components/schemas/Job"}
          },
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "JobResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "data": {"$ref": "#/components/schemas/Job"},
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "message": {"type": "string"},
          "businessVerification": {
            "type": "object",
            "properties": {
              "businessName": {"type": "string"},
              "businessId": {"type": "integer"},
              "dataSource": {"type": "string"},
              "timestamp": {"type": "string", "format": "date-time"}
            }
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {"type": "boolean"},
          "error": {"type": "string"}
        }
      }
    }
  }
}